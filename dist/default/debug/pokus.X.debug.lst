

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec  4 19:48:50 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F87J11
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 23/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F87J11 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     _TMR0L	set	4054
    56   000000                     _TMR0H	set	4055
    57   000000                     _T0CONbits	set	4053
    58   000000                     _PORTJbits	set	3976
    59   000000                     _T0CON	set	4053
    60   000000                     _INTCON2	set	4081
    61   000000                     _INTCONbits	set	4082
    62   000000                     _OSCTUNEbits	set	3995
    63   000000                     _OSCCONbits	set	4051
    64   000000                     _RCONbits	set	4048
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69   001304                     __pcinit:
    70                           	callstack 0
    71   001304                     start_initialization:
    72                           	callstack 0
    73   001304                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (11 bytes)
    77   001304  EE00  F001         	lfsr	0,__pbssCOMRAM
    78   001308  0E0B               	movlw	11
    79   00130A                     clear_0:
    80   00130A  6AEE               	clrf	postinc0,c
    81   00130C  06E8               	decf	wreg,f,c
    82   00130E  E1FD               	bnz	clear_0
    83   001310                     end_of_initialization:
    84                           	callstack 0
    85   001310                     __end_of__initialization:
    86                           	callstack 0
    87   001310  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    88   001312  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    89   001314  0100               	movlb	0
    90   001316  EF47  F009         	goto	_main	;jump to C main() function
    91                           
    92                           	psect	bssCOMRAM
    93   000001                     __pbssCOMRAM:
    94                           	callstack 0
    95   000001                     _casove_preruseni:
    96                           	callstack 0
    97   000001                     	ds	1
    98   000002                     _zaaretovane_tlacitko:
    99                           	callstack 0
   100   000002                     	ds	2
   101   000004                     _stav_aretace:
   102                           	callstack 0
   103   000004                     	ds	2
   104   000006                     _stav_tlacitka:
   105                           	callstack 0
   106   000006                     	ds	2
   107   000008                     _filtrovane_tlacitko_S4:
   108                           	callstack 0
   109   000008                     	ds	2
   110   00000A                     _vstup:
   111                           	callstack 0
   112   00000A                     	ds	2
   113                           
   114                           	psect	cstackCOMRAM
   115   00000C                     __pcstackCOMRAM:
   116                           	callstack 0
   117   00000C                     ??_low_isr:
   118                           
   119                           ; 1 bytes @ 0x0
   120   00000C                     	ds	3
   121   00000F                     filtr@vstup:
   122                           	callstack 0
   123   00000F                     aretace@vstup:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x3
   127   00000F                     	ds	1
   128   000010                     filtr@stav:
   129                           	callstack 0
   130   000010                     aretace@stav:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x4
   134   000010                     	ds	1
   135   000011                     filtr@vystup:
   136                           	callstack 0
   137   000011                     aretace@vystup:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x5
   141   000011                     	ds	1
   142   000012                     ??_filtr:
   143   000012                     ??_aretace:
   144                           
   145                           ; 1 bytes @ 0x6
   146   000012                     	ds	2
   147   000014                     ??_main:
   148                           
   149                           ; 1 bytes @ 0x8
   150   000014                     	ds	1
   151                           
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 56 in file "source/main.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;Total ram usage:        1 bytes
   176 ;; Hardware stack levels required when called: 3
   177 ;; This function calls:
   178 ;;		_aretace
   179 ;;		_filtr
   180 ;;		_preambleInitialization
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187   00128E                     __ptext0:
   188                           	callstack 0
   189   00128E                     _main:
   190                           	callstack 28
   191   00128E                     
   192                           ;source/main.c: 59:   preambleInitialization();
   193   00128E  EC8D  F009         	call	_preambleInitialization	;wreg free
   194   001292                     
   195                           ;source/main.c: 67:   T0CON = 0;
   196   001292  0E00               	movlw	0
   197   001294  6ED5               	movwf	213,c	;volatile
   198   001296                     
   199                           ;source/main.c: 68:   T0CONbits.PSA = 1;
   200   001296  86D5               	bsf	213,3,c	;volatile
   201   001298                     
   202                           ;source/main.c: 69:   TMR0H = 0xD8;
   203   001298  0ED8               	movlw	216
   204   00129A  6ED7               	movwf	215,c	;volatile
   205   00129C                     
   206                           ;source/main.c: 70:   TMR0L = 0xEF;
   207   00129C  0EEF               	movlw	239
   208   00129E  6ED6               	movwf	214,c	;volatile
   209   0012A0                     
   210                           ;source/main.c: 73:   T0CONbits.TMR0ON = 1;
   211   0012A0  8ED5               	bsf	213,7,c	;volatile
   212   0012A2                     
   213                           ;source/main.c: 77:   INTCON2 = 0;
   214   0012A2  0E00               	movlw	0
   215   0012A4  6EF1               	movwf	241,c	;volatile
   216   0012A6                     
   217                           ;source/main.c: 78:   INTCONbits.TMR0IE = 1;
   218   0012A6  8AF2               	bsf	242,5,c	;volatile
   219   0012A8                     
   220                           ;source/main.c: 80:   T0CONbits.TMR0ON = 1;
   221   0012A8  8ED5               	bsf	213,7,c	;volatile
   222   0012AA                     
   223                           ;source/main.c: 82:   INTCONbits.GIEL = 1;
   224   0012AA  8CF2               	bsf	242,6,c	;volatile
   225   0012AC                     
   226                           ;source/main.c: 83:   INTCONbits.GIEH = 1;
   227   0012AC  8EF2               	bsf	242,7,c	;volatile
   228   0012AE                     l989:
   229                           
   230                           ;source/main.c: 87:   {;source/main.c: 88:       if(casove_preruseni == 1){
   231   0012AE  0401               	decf	_casove_preruseni^0,w,c
   232   0012B0  A4D8               	btfss	status,2,c
   233   0012B2  EF5D  F009         	goto	u221
   234   0012B6  EF5F  F009         	goto	u220
   235   0012BA                     u221:
   236   0012BA  EF57  F009         	goto	l989
   237   0012BE                     u220:
   238   0012BE                     
   239                           ;source/main.c: 89:           casove_preruseni = 0;
   240   0012BE  0E00               	movlw	0
   241   0012C0  6E01               	movwf	_casove_preruseni^0,c
   242                           
   243                           ;source/main.c: 90:           vstup = PORTJbits.RJ7;
   244   0012C2  BE88               	btfsc	136,7,c	;volatile
   245   0012C4  EF66  F009         	goto	u231
   246   0012C8  EF6A  F009         	goto	u230
   247   0012CC                     u231:
   248   0012CC  6A14               	clrf	??_main^0,c
   249   0012CE  2A14               	incf	??_main^0,f,c
   250   0012D0  EF6B  F009         	goto	u238
   251   0012D4                     u230:
   252   0012D4  6A14               	clrf	??_main^0,c
   253   0012D6                     u238:
   254   0012D6  5014               	movf	??_main^0,w,c
   255   0012D8  6E0A               	movwf	_vstup^0,c
   256   0012DA  6A0B               	clrf	(_vstup+1)^0,c
   257   0012DC                     
   258                           ;source/main.c: 91:           filtr(&vstup, &stav_tlacitka, &filtrovane_tlacitko_S4);
   259   0012DC  0E0A               	movlw	low _vstup
   260   0012DE  6E0F               	movwf	filtr@vstup^0,c
   261   0012E0  0E06               	movlw	low _stav_tlacitka
   262   0012E2  6E10               	movwf	filtr@stav^0,c
   263   0012E4  0E08               	movlw	low _filtrovane_tlacitko_S4
   264   0012E6  6E11               	movwf	filtr@vystup^0,c
   265   0012E8  EC01  F008         	call	_filtr	;wreg free
   266   0012EC                     
   267                           ;source/main.c: 92:           aretace(&filtrovane_tlacitko_S4, &stav_aretace, &zaaretova
      +                          ne_tlacitko);
   268   0012EC  0E08               	movlw	low _filtrovane_tlacitko_S4
   269   0012EE  6E0F               	movwf	aretace@vstup^0,c
   270   0012F0  0E04               	movlw	low _stav_aretace
   271   0012F2  6E10               	movwf	aretace@stav^0,c
   272   0012F4  0E02               	movlw	low _zaaretovane_tlacitko
   273   0012F6  6E11               	movwf	aretace@vystup^0,c
   274   0012F8  ECC5  F008         	call	_aretace	;wreg free
   275   0012FC  EF57  F009         	goto	l989
   276   001300  EF29  F000         	goto	start
   277   001304                     __end_of_main:
   278                           	callstack 0
   279                           
   280 ;; *************** function _preambleInitialization *****************
   281 ;; Defined at:
   282 ;;		line 16 in file "source/preambleInitialization.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, status,2
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels used: 1
   302 ;; Hardware stack levels required when called: 2
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		_main
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text1
   311   00131A                     __ptext1:
   312                           	callstack 0
   313   00131A                     _preambleInitialization:
   314                           	callstack 28
   315   00131A                     
   316                           ;source/preambleInitialization.c: 26:     OSCCONbits.SCS = 0;
   317   00131A  0EFC               	movlw	-4
   318   00131C  16D3               	andwf	211,f,c	;volatile
   319   00131E                     
   320                           ;source/preambleInitialization.c: 28:     OSCTUNEbits.PLLEN = 1;
   321   00131E  8C9B               	bsf	155,6,c	;volatile
   322   001320                     
   323                           ;source/preambleInitialization.c: 33:     RCONbits.IPEN = 1;
   324   001320  8ED0               	bsf	208,7,c	;volatile
   325   001322  0012               	return		;funcret
   326   001324                     __end_of_preambleInitialization:
   327                           	callstack 0
   328                           
   329 ;; *************** function _filtr *****************
   330 ;; Defined at:
   331 ;;		line 18 in file "source/filtr.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  vstup           1    3[COMRAM] PTR int 
   334 ;;		 -> vstup(2), 
   335 ;;  stav            1    4[COMRAM] PTR int 
   336 ;;		 -> stav_tlacitka(2), 
   337 ;;  vystup          1    5[COMRAM] PTR int 
   338 ;;		 -> filtrovane_tlacitko_S4(2), 
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   354 ;;Total ram usage:        5 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 2
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text2
   365   001002                     __ptext2:
   366                           	callstack 0
   367   001002                     _filtr:
   368                           	callstack 28
   369   001002                     
   370                           ;source/filtr.c: 19:     switch (*stav){
   371   001002  EF9F  F008         	goto	l935
   372   001006                     l903:
   373                           
   374                           ;source/filtr.c: 21:             if (*vstup == 1){
   375   001006  500F               	movf	filtr@vstup^0,w,c
   376   001008  6ED9               	movwf	fsr2l,c
   377   00100A  6ADA               	clrf	fsr2h,c
   378   00100C  04DE               	decf	postinc2,w,c
   379   00100E  10DE               	iorwf	postinc2,w,c
   380   001010  A4D8               	btfss	status,2,c
   381   001012  EF0D  F008         	goto	u131
   382   001016  EF0F  F008         	goto	u130
   383   00101A                     u131:
   384   00101A  EF18  F008         	goto	l907
   385   00101E                     u130:
   386   00101E                     l905:
   387                           
   388                           ;source/filtr.c: 22:                 *stav = fs1;
   389   00101E  5010               	movf	filtr@stav^0,w,c
   390   001020  6ED9               	movwf	fsr2l,c
   391   001022  6ADA               	clrf	fsr2h,c
   392   001024  0E01               	movlw	1
   393   001026  6EDE               	movwf	postinc2,c
   394   001028  0E00               	movlw	0
   395   00102A  6EDD               	movwf	postdec2,c
   396                           
   397                           ;source/filtr.c: 23:             }
   398   00102C  EF1F  F008         	goto	l78
   399   001030                     l907:
   400                           
   401                           ;source/filtr.c: 25:                 *stav = fs3;
   402   001030  5010               	movf	filtr@stav^0,w,c
   403   001032  6ED9               	movwf	fsr2l,c
   404   001034  6ADA               	clrf	fsr2h,c
   405   001036  0E03               	movlw	3
   406   001038  6EDE               	movwf	postinc2,c
   407   00103A  0E00               	movlw	0
   408   00103C  6EDD               	movwf	postdec2,c
   409   00103E                     l78:
   410                           
   411                           ;source/filtr.c: 27:             *vystup = 0;
   412   00103E  5011               	movf	filtr@vystup^0,w,c
   413   001040  6ED9               	movwf	fsr2l,c
   414   001042  6ADA               	clrf	fsr2h,c
   415   001044  6ADE               	clrf	postinc2,c
   416   001046  6ADD               	clrf	postdec2,c
   417                           
   418                           ;source/filtr.c: 28:             break;
   419   001048  EFC4  F008         	goto	l92
   420   00104C                     l909:
   421                           
   422                           ;source/filtr.c: 32:             if (*vstup == 1){
   423   00104C  500F               	movf	filtr@vstup^0,w,c
   424   00104E  6ED9               	movwf	fsr2l,c
   425   001050  6ADA               	clrf	fsr2h,c
   426   001052  04DE               	decf	postinc2,w,c
   427   001054  10DE               	iorwf	postinc2,w,c
   428   001056  A4D8               	btfss	status,2,c
   429   001058  EF30  F008         	goto	u141
   430   00105C  EF32  F008         	goto	u140
   431   001060                     u141:
   432   001060  EF18  F008         	goto	l907
   433   001064                     u140:
   434   001064                     
   435                           ;source/filtr.c: 33:                 *stav = fs2;
   436   001064  5010               	movf	filtr@stav^0,w,c
   437   001066  6ED9               	movwf	fsr2l,c
   438   001068  6ADA               	clrf	fsr2h,c
   439   00106A  0E02               	movlw	2
   440   00106C  6EDE               	movwf	postinc2,c
   441   00106E  0E00               	movlw	0
   442   001070  6EDD               	movwf	postdec2,c
   443                           
   444                           ;source/filtr.c: 34:             }
   445   001072  EF1F  F008         	goto	l78
   446   001076                     l915:
   447                           
   448                           ;source/filtr.c: 43:             if (*vstup == 1){
   449   001076  500F               	movf	filtr@vstup^0,w,c
   450   001078  6ED9               	movwf	fsr2l,c
   451   00107A  6ADA               	clrf	fsr2h,c
   452   00107C  04DE               	decf	postinc2,w,c
   453   00107E  10DE               	iorwf	postinc2,w,c
   454   001080  A4D8               	btfss	status,2,c
   455   001082  EF45  F008         	goto	u151
   456   001086  EF47  F008         	goto	u150
   457   00108A                     u151:
   458   00108A  EF57  F008         	goto	l919
   459   00108E                     u150:
   460   00108E                     
   461                           ;source/filtr.c: 44:                 *stav = fs2;
   462   00108E  5010               	movf	filtr@stav^0,w,c
   463   001090  6ED9               	movwf	fsr2l,c
   464   001092  6ADA               	clrf	fsr2h,c
   465   001094  0E02               	movlw	2
   466   001096  6EDE               	movwf	postinc2,c
   467   001098  0E00               	movlw	0
   468   00109A  6EDD               	movwf	postdec2,c
   469                           
   470                           ;source/filtr.c: 45:                 *vystup = 1;
   471   00109C  5011               	movf	filtr@vystup^0,w,c
   472   00109E  6ED9               	movwf	fsr2l,c
   473   0010A0  6ADA               	clrf	fsr2h,c
   474   0010A2  0E01               	movlw	1
   475   0010A4  6EDE               	movwf	postinc2,c
   476   0010A6  0E00               	movlw	0
   477   0010A8  6EDD               	movwf	postdec2,c
   478                           
   479                           ;source/filtr.c: 46:             }
   480   0010AA  EFC4  F008         	goto	l92
   481   0010AE                     l919:
   482                           
   483                           ;source/filtr.c: 48:                 *stav = fs3;
   484   0010AE  5010               	movf	filtr@stav^0,w,c
   485   0010B0  6ED9               	movwf	fsr2l,c
   486   0010B2  6ADA               	clrf	fsr2h,c
   487   0010B4  0E03               	movlw	3
   488   0010B6  6EDE               	movwf	postinc2,c
   489   0010B8  0E00               	movlw	0
   490   0010BA  6EDD               	movwf	postdec2,c
   491                           
   492                           ;source/filtr.c: 49:                 *vystup = 0;
   493   0010BC  5011               	movf	filtr@vystup^0,w,c
   494   0010BE  6ED9               	movwf	fsr2l,c
   495   0010C0  6ADA               	clrf	fsr2h,c
   496   0010C2  6ADE               	clrf	postinc2,c
   497   0010C4  6ADD               	clrf	postdec2,c
   498   0010C6  EFC4  F008         	goto	l92
   499   0010CA                     l921:
   500                           
   501                           ;source/filtr.c: 55:             if (*vstup == 1){
   502   0010CA  500F               	movf	filtr@vstup^0,w,c
   503   0010CC  6ED9               	movwf	fsr2l,c
   504   0010CE  6ADA               	clrf	fsr2h,c
   505   0010D0  04DE               	decf	postinc2,w,c
   506   0010D2  10DE               	iorwf	postinc2,w,c
   507   0010D4  A4D8               	btfss	status,2,c
   508   0010D6  EF6F  F008         	goto	u161
   509   0010DA  EF71  F008         	goto	u160
   510   0010DE                     u161:
   511   0010DE  EF73  F008         	goto	l925
   512   0010E2                     u160:
   513   0010E2  EF0F  F008         	goto	l905
   514   0010E6                     l925:
   515                           
   516                           ;source/filtr.c: 59:                 *stav = fs4;
   517   0010E6  5010               	movf	filtr@stav^0,w,c
   518   0010E8  6ED9               	movwf	fsr2l,c
   519   0010EA  6ADA               	clrf	fsr2h,c
   520   0010EC  0E04               	movlw	4
   521   0010EE  6EDE               	movwf	postinc2,c
   522   0010F0  0E00               	movlw	0
   523   0010F2  6EDD               	movwf	postdec2,c
   524   0010F4  EF1F  F008         	goto	l78
   525   0010F8                     l927:
   526                           
   527                           ;source/filtr.c: 66:             if (*vstup == 1){
   528   0010F8  500F               	movf	filtr@vstup^0,w,c
   529   0010FA  6ED9               	movwf	fsr2l,c
   530   0010FC  6ADA               	clrf	fsr2h,c
   531   0010FE  04DE               	decf	postinc2,w,c
   532   001100  10DE               	iorwf	postinc2,w,c
   533   001102  A4D8               	btfss	status,2,c
   534   001104  EF86  F008         	goto	u171
   535   001108  EF88  F008         	goto	u170
   536   00110C                     u171:
   537   00110C  EF91  F008         	goto	l931
   538   001110                     u170:
   539   001110                     
   540                           ;source/filtr.c: 67:                 *stav = fs1;
   541   001110  5010               	movf	filtr@stav^0,w,c
   542   001112  6ED9               	movwf	fsr2l,c
   543   001114  6ADA               	clrf	fsr2h,c
   544   001116  0E01               	movlw	1
   545   001118  6EDE               	movwf	postinc2,c
   546   00111A  0E00               	movlw	0
   547   00111C  6EDD               	movwf	postdec2,c
   548                           
   549                           ;source/filtr.c: 68:             }
   550   00111E  EFC4  F008         	goto	l92
   551   001122                     l931:
   552                           
   553                           ;source/filtr.c: 70:                 *stav = fs4;
   554   001122  5010               	movf	filtr@stav^0,w,c
   555   001124  6ED9               	movwf	fsr2l,c
   556   001126  6ADA               	clrf	fsr2h,c
   557   001128  0E04               	movlw	4
   558   00112A  6EDE               	movwf	postinc2,c
   559   00112C  0E00               	movlw	0
   560   00112E  6EDD               	movwf	postdec2,c
   561                           
   562                           ;source/filtr.c: 71:                 *vystup = 0;
   563   001130  5011               	movf	filtr@vystup^0,w,c
   564   001132  6ED9               	movwf	fsr2l,c
   565   001134  6ADA               	clrf	fsr2h,c
   566   001136  6ADE               	clrf	postinc2,c
   567   001138  6ADD               	clrf	postdec2,c
   568   00113A  EFC4  F008         	goto	l92
   569   00113E                     l935:
   570   00113E  5010               	movf	filtr@stav^0,w,c
   571   001140  6ED9               	movwf	fsr2l,c
   572   001142  6ADA               	clrf	fsr2h,c
   573   001144  CFDE F012          	movff	postinc2,??_filtr
   574   001148  CFDD F013          	movff	postdec2,??_filtr+1
   575                           
   576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   577                           ; Switch size 1, requested type "simple"
   578                           ; Number of cases is 1, Range of values is 0 to 0
   579                           ; switch strategies available:
   580                           ; Name         Instructions Cycles
   581                           ; simple_byte            4     3 (average)
   582                           ;	Chosen strategy is simple_byte
   583   00114C  5013               	movf	(??_filtr+1)^0,w,c
   584   00114E  0A00               	xorlw	0	; case 0
   585   001150  B4D8               	btfsc	status,2,c
   586   001152  EFAD  F008         	goto	l1005
   587   001156  EFC4  F008         	goto	l92
   588   00115A                     l1005:
   589                           
   590                           ; Switch size 1, requested type "simple"
   591                           ; Number of cases is 5, Range of values is 0 to 4
   592                           ; switch strategies available:
   593                           ; Name         Instructions Cycles
   594                           ; simple_byte           16     9 (average)
   595                           ;	Chosen strategy is simple_byte
   596   00115A  5012               	movf	??_filtr^0,w,c
   597   00115C  0A00               	xorlw	0	; case 0
   598   00115E  B4D8               	btfsc	status,2,c
   599   001160  EF03  F008         	goto	l903
   600   001164  0A01               	xorlw	1	; case 1
   601   001166  B4D8               	btfsc	status,2,c
   602   001168  EF26  F008         	goto	l909
   603   00116C  0A03               	xorlw	3	; case 2
   604   00116E  B4D8               	btfsc	status,2,c
   605   001170  EF3B  F008         	goto	l915
   606   001174  0A01               	xorlw	1	; case 3
   607   001176  B4D8               	btfsc	status,2,c
   608   001178  EF65  F008         	goto	l921
   609   00117C  0A07               	xorlw	7	; case 4
   610   00117E  B4D8               	btfsc	status,2,c
   611   001180  EF7C  F008         	goto	l927
   612   001184  EFC4  F008         	goto	l92
   613   001188                     l92:
   614   001188  0012               	return		;funcret
   615   00118A                     __end_of_filtr:
   616                           	callstack 0
   617                           
   618 ;; *************** function _aretace *****************
   619 ;; Defined at:
   620 ;;		line 14 in file "source/aretace.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  vstup           1    3[COMRAM] PTR int 
   623 ;;		 -> filtrovane_tlacitko_S4(2), 
   624 ;;  stav            1    4[COMRAM] PTR int 
   625 ;;		 -> stav_aretace(2), 
   626 ;;  vystup          1    5[COMRAM] PTR int 
   627 ;;		 -> zaaretovane_tlacitko(2), 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;Total ram usage:        5 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 2
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text3
   654   00118A                     __ptext3:
   655                           	callstack 0
   656   00118A                     _aretace:
   657                           	callstack 28
   658   00118A                     
   659                           ;source/aretace.c: 15:     switch (*stav){
   660   00118A  EF25  F009         	goto	l961
   661   00118E                     l943:
   662                           
   663                           ;source/aretace.c: 17:             if (*vstup == 1){
   664   00118E  500F               	movf	aretace@vstup^0,w,c
   665   001190  6ED9               	movwf	fsr2l,c
   666   001192  6ADA               	clrf	fsr2h,c
   667   001194  04DE               	decf	postinc2,w,c
   668   001196  10DE               	iorwf	postinc2,w,c
   669   001198  A4D8               	btfss	status,2,c
   670   00119A  EFD1  F008         	goto	u181
   671   00119E  EFD3  F008         	goto	u180
   672   0011A2                     u181:
   673   0011A2  EF46  F009         	goto	l105
   674   0011A6                     u180:
   675   0011A6                     
   676                           ;source/aretace.c: 18:                 *stav = as1;
   677   0011A6  5010               	movf	aretace@stav^0,w,c
   678   0011A8  6ED9               	movwf	fsr2l,c
   679   0011AA  6ADA               	clrf	fsr2h,c
   680   0011AC  0E01               	movlw	1
   681   0011AE  6EDE               	movwf	postinc2,c
   682   0011B0  0E00               	movlw	0
   683   0011B2  6EDD               	movwf	postdec2,c
   684                           
   685                           ;source/aretace.c: 19:                 *vystup = 1;
   686   0011B4  5011               	movf	aretace@vystup^0,w,c
   687   0011B6  6ED9               	movwf	fsr2l,c
   688   0011B8  6ADA               	clrf	fsr2h,c
   689   0011BA  0E01               	movlw	1
   690   0011BC  6EDE               	movwf	postinc2,c
   691   0011BE  0E00               	movlw	0
   692   0011C0  6EDD               	movwf	postdec2,c
   693   0011C2  EF46  F009         	goto	l105
   694   0011C6                     l947:
   695                           
   696                           ;source/aretace.c: 25:             if (*vstup == 0){
   697   0011C6  500F               	movf	aretace@vstup^0,w,c
   698   0011C8  6ED9               	movwf	fsr2l,c
   699   0011CA  6ADA               	clrf	fsr2h,c
   700   0011CC  50DE               	movf	postinc2,w,c
   701   0011CE  10DE               	iorwf	postinc2,w,c
   702   0011D0  A4D8               	btfss	status,2,c
   703   0011D2  EFED  F008         	goto	u191
   704   0011D6  EFEF  F008         	goto	u190
   705   0011DA                     u191:
   706   0011DA  EF46  F009         	goto	l105
   707   0011DE                     u190:
   708   0011DE                     
   709                           ;source/aretace.c: 26:                 *stav = as2;
   710   0011DE  5010               	movf	aretace@stav^0,w,c
   711   0011E0  6ED9               	movwf	fsr2l,c
   712   0011E2  6ADA               	clrf	fsr2h,c
   713   0011E4  0E02               	movlw	2
   714   0011E6  6EDE               	movwf	postinc2,c
   715   0011E8  0E00               	movlw	0
   716   0011EA  6EDD               	movwf	postdec2,c
   717   0011EC  EF46  F009         	goto	l105
   718   0011F0                     l951:
   719                           
   720                           ;source/aretace.c: 33:             if (*vstup == 1){
   721   0011F0  500F               	movf	aretace@vstup^0,w,c
   722   0011F2  6ED9               	movwf	fsr2l,c
   723   0011F4  6ADA               	clrf	fsr2h,c
   724   0011F6  04DE               	decf	postinc2,w,c
   725   0011F8  10DE               	iorwf	postinc2,w,c
   726   0011FA  A4D8               	btfss	status,2,c
   727   0011FC  EF02  F009         	goto	u201
   728   001200  EF04  F009         	goto	u200
   729   001204                     u201:
   730   001204  EF46  F009         	goto	l105
   731   001208                     u200:
   732   001208                     
   733                           ;source/aretace.c: 34:                 *stav = as3;
   734   001208  5010               	movf	aretace@stav^0,w,c
   735   00120A  6ED9               	movwf	fsr2l,c
   736   00120C  6ADA               	clrf	fsr2h,c
   737   00120E  0E03               	movlw	3
   738   001210  6EDE               	movwf	postinc2,c
   739   001212  0E00               	movlw	0
   740   001214  6EDD               	movwf	postdec2,c
   741                           
   742                           ;source/aretace.c: 35:                 *vystup = 0;
   743   001216  5011               	movf	aretace@vystup^0,w,c
   744   001218  6ED9               	movwf	fsr2l,c
   745   00121A  6ADA               	clrf	fsr2h,c
   746   00121C  6ADE               	clrf	postinc2,c
   747   00121E  6ADD               	clrf	postdec2,c
   748   001220  EF46  F009         	goto	l105
   749   001224                     l955:
   750                           
   751                           ;source/aretace.c: 41:             if (*vstup == 0){
   752   001224  500F               	movf	aretace@vstup^0,w,c
   753   001226  6ED9               	movwf	fsr2l,c
   754   001228  6ADA               	clrf	fsr2h,c
   755   00122A  50DE               	movf	postinc2,w,c
   756   00122C  10DE               	iorwf	postinc2,w,c
   757   00122E  A4D8               	btfss	status,2,c
   758   001230  EF1C  F009         	goto	u211
   759   001234  EF1E  F009         	goto	u210
   760   001238                     u211:
   761   001238  EF46  F009         	goto	l105
   762   00123C                     u210:
   763   00123C                     
   764                           ;source/aretace.c: 42:                 *stav = as0;
   765   00123C  5010               	movf	aretace@stav^0,w,c
   766   00123E  6ED9               	movwf	fsr2l,c
   767   001240  6ADA               	clrf	fsr2h,c
   768   001242  6ADE               	clrf	postinc2,c
   769   001244  6ADD               	clrf	postdec2,c
   770   001246  EF46  F009         	goto	l105
   771   00124A                     l961:
   772   00124A  5010               	movf	aretace@stav^0,w,c
   773   00124C  6ED9               	movwf	fsr2l,c
   774   00124E  6ADA               	clrf	fsr2h,c
   775   001250  CFDE F012          	movff	postinc2,??_aretace
   776   001254  CFDD F013          	movff	postdec2,??_aretace+1
   777                           
   778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   779                           ; Switch size 1, requested type "simple"
   780                           ; Number of cases is 1, Range of values is 0 to 0
   781                           ; switch strategies available:
   782                           ; Name         Instructions Cycles
   783                           ; simple_byte            4     3 (average)
   784                           ;	Chosen strategy is simple_byte
   785   001258  5013               	movf	(??_aretace+1)^0,w,c
   786   00125A  0A00               	xorlw	0	; case 0
   787   00125C  B4D8               	btfsc	status,2,c
   788   00125E  EF33  F009         	goto	l1007
   789   001262  EF46  F009         	goto	l105
   790   001266                     l1007:
   791                           
   792                           ; Switch size 1, requested type "simple"
   793                           ; Number of cases is 4, Range of values is 0 to 3
   794                           ; switch strategies available:
   795                           ; Name         Instructions Cycles
   796                           ; simple_byte           13     7 (average)
   797                           ;	Chosen strategy is simple_byte
   798   001266  5012               	movf	??_aretace^0,w,c
   799   001268  0A00               	xorlw	0	; case 0
   800   00126A  B4D8               	btfsc	status,2,c
   801   00126C  EFC7  F008         	goto	l943
   802   001270  0A01               	xorlw	1	; case 1
   803   001272  B4D8               	btfsc	status,2,c
   804   001274  EFE3  F008         	goto	l947
   805   001278  0A03               	xorlw	3	; case 2
   806   00127A  B4D8               	btfsc	status,2,c
   807   00127C  EFF8  F008         	goto	l951
   808   001280  0A01               	xorlw	1	; case 3
   809   001282  B4D8               	btfsc	status,2,c
   810   001284  EF12  F009         	goto	l955
   811   001288  EF46  F009         	goto	l105
   812   00128C                     l105:
   813   00128C  0012               	return		;funcret
   814   00128E                     __end_of_aretace:
   815                           	callstack 0
   816                           
   817 ;; *************** function _low_isr *****************
   818 ;; Defined at:
   819 ;;		line 108 in file "source/main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		Interrupt level 1
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	intcodelo
   848   000018                     __pintcodelo:
   849                           	callstack 0
   850   000018                     _low_isr:
   851                           	callstack 28
   852                           
   853                           ;incstack = 0
   854   000018  8015               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   855   00001A  CFD8 F00C          	movff	status,??_low_isr
   856   00001E  CFE8 F00D          	movff	wreg,??_low_isr+1
   857   000022  CFE0 F00E          	movff	bsr,??_low_isr+2
   858   000026                     
   859                           ;source/main.c: 109:     if (INTCONbits.TMR0IF == 1){
   860   000026  A4F2               	btfss	242,2,c	;volatile
   861   000028  EF18  F000         	goto	i1u12_21
   862   00002C  EF1A  F000         	goto	i1u12_20
   863   000030                     i1u12_21:
   864   000030  EF21  F000         	goto	i1l55
   865   000034                     i1u12_20:
   866   000034                     
   867                           ;source/main.c: 110:         TMR0H = 0xD8;
   868   000034  0ED8               	movlw	216
   869   000036  6ED7               	movwf	215,c	;volatile
   870                           
   871                           ;source/main.c: 111:         TMR0L = 0xEF;
   872   000038  0EEF               	movlw	239
   873   00003A  6ED6               	movwf	214,c	;volatile
   874   00003C                     
   875                           ;source/main.c: 112:         INTCONbits.TMR0IF = 0;
   876   00003C  94F2               	bcf	242,2,c	;volatile
   877                           
   878                           ;source/main.c: 114:         casove_preruseni=1;
   879   00003E  0E01               	movlw	1
   880   000040  6E01               	movwf	_casove_preruseni^0,c
   881   000042                     i1l55:
   882   000042  C00E  FFE0         	movff	??_low_isr+2,bsr
   883   000046  C00D  FFE8         	movff	??_low_isr+1,wreg
   884   00004A  C00C  FFD8         	movff	??_low_isr,status
   885   00004E  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   886   000050  0010               	retfie	
   887   000052                     __end_of_low_isr:
   888                           	callstack 0
   889                           
   890 ;; *************** function _high_isr *****************
   891 ;; Defined at:
   892 ;;		line 102 in file "source/main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		None
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		Interrupt level 2
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	intcode
   920   000008                     __pintcode:
   921                           	callstack 0
   922   000008                     _high_isr:
   923                           	callstack 28
   924                           
   925                           ;incstack = 0
   926   000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   927   00000A  EF92  F009         	goto	int_func
   928                           
   929                           	psect	intcode_body
   930   001324                     __pintcode_body:
   931                           	callstack 28
   932   001324                     int_func:
   933                           	callstack 28
   934   001324  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   935   001326  0011               	retfie		f
   936   001328                     __end_of_high_isr:
   937                           	callstack 0
   938                           
   939                           	psect	smallconst
   940   001000                     __psmallconst:
   941                           	callstack 0
   942   001000  00                 	db	0
   943   001001  00                 	db	0	; dummy byte at the end
   944   000000                     
   945                           	psect	rparam
   946   000000                     
   947                           	psect	temp
   948   000015                     btemp:
   949                           	callstack 0
   950   000015                     	ds	1
   951   000000                     int$flags	set	btemp
   952   000000                     wtemp8	set	btemp+1
   953   000000                     ttemp5	set	btemp+1
   954   000000                     ttemp6	set	btemp+4
   955   000000                     ttemp7	set	btemp+8
   956                           
   957                           	psect	config
   958                           
   959                           ;Config register CONFIG1L @ 0x1FFF8
   960                           ;	Watchdog Timer Enable bit
   961                           ;	WDTEN = OFF, WDT disabled (control is placed on SWDTEN bit)
   962                           ;	Stack Overflow/Underflow Reset Enable bit
   963                           ;	STVREN = ON, Reset on stack overflow/underflow enabled
   964                           ;	Extended Instruction Set Enable bit
   965                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   966                           ;	Background Debugger Enable bit
   967                           ;	DEBUG = 0x1, unprogrammed default
   968   01FFF8                     	org	131064
   969   01FFF8  A0                 	db	160
   970                           
   971                           ;Config register CONFIG1H @ 0x1FFF9
   972                           ;	Code Protection bit
   973                           ;	CP0 = OFF, Program memory is not code-protected
   974   01FFF9                     	org	131065
   975   01FFF9  F4                 	db	244
   976                           
   977                           ;Config register CONFIG2L @ 0x1FFFA
   978                           ;	Oscillator Selection bits
   979                           ;	FOSC = HSPLL, HS oscillator, PLL enabled
   980                           ;	Fail-Safe Clock Monitor Enable bit
   981                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   982                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
   983                           ;	IESO = OFF, Two-Speed Start-up disabled
   984   01FFFA                     	org	131066
   985   01FFFA  05                 	db	5
   986                           
   987                           ;Config register CONFIG2H @ 0x1FFFB
   988                           ;	Watchdog Timer Postscaler Select bits
   989                           ;	WDTPS = 32768, 1:32768
   990   01FFFB                     	org	131067
   991   01FFFB  FF                 	db	255
   992                           
   993                           ;Config register CONFIG3L @ 0x1FFFC
   994                           ;	External Address Bus Shift Enable bit
   995                           ;	EASHFT = 0x1, unprogrammed default
   996                           ;	External Memory Bus Configuration bits
   997                           ;	MODE = MM, Microcontroller mode - External bus disabled
   998                           ;	Data Bus Width Select bit
   999                           ;	BW = 0x1, unprogrammed default
  1000                           ;	External Bus Wait Enable bit
  1001                           ;	WAIT = 0x1, unprogrammed default
  1002   01FFFC                     	org	131068
  1003   01FFFC  F8                 	db	248
  1004                           
  1005                           ;Config register CONFIG3H @ 0x1FFFD
  1006                           ;	unspecified, using default values
  1007                           ;	ECCP2 MUX bit
  1008                           ;	CCP2MX = 0x1, unprogrammed default
  1009                           ;	ECCPx MUX bit
  1010                           ;	ECCPMX = 0x1, unprogrammed default
  1011                           ;	PMP Pin Multiplex bit
  1012                           ;	PMPMX = 0x1, unprogrammed default
  1013                           ;	MSSP Address Masking Mode Select bit
  1014                           ;	MSSPMSK = 0x1, unprogrammed default
  1015   01FFFD                     	org	131069
  1016   01FFFD  FF                 	db	255
  1017                           tosu	equ	0xFFF
  1018                           tosh	equ	0xFFE
  1019                           tosl	equ	0xFFD
  1020                           stkptr	equ	0xFFC
  1021                           pclatu	equ	0xFFB
  1022                           pclath	equ	0xFFA
  1023                           pcl	equ	0xFF9
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           prodh	equ	0xFF4
  1029                           prodl	equ	0xFF3
  1030                           indf0	equ	0xFEF
  1031                           postinc0	equ	0xFEE
  1032                           postdec0	equ	0xFED
  1033                           preinc0	equ	0xFEC
  1034                           plusw0	equ	0xFEB
  1035                           fsr0h	equ	0xFEA
  1036                           fsr0l	equ	0xFE9
  1037                           wreg	equ	0xFE8
  1038                           indf1	equ	0xFE7
  1039                           postinc1	equ	0xFE6
  1040                           postdec1	equ	0xFE5
  1041                           preinc1	equ	0xFE4
  1042                           plusw1	equ	0xFE3
  1043                           fsr1h	equ	0xFE2
  1044                           fsr1l	equ	0xFE1
  1045                           bsr	equ	0xFE0
  1046                           indf2	equ	0xFDF
  1047                           postinc2	equ	0xFDE
  1048                           postdec2	equ	0xFDD
  1049                           preinc2	equ	0xFDC
  1050                           plusw2	equ	0xFDB
  1051                           fsr2h	equ	0xFDA
  1052                           fsr2l	equ	0xFD9
  1053                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    aretace@stav	PTR int  size(1) Largest target is 2
		 -> stav_aretace(COMRAM[2]), 

    aretace@vstup	PTR int  size(1) Largest target is 2
		 -> filtrovane_tlacitko_S4(COMRAM[2]), 

    aretace@vystup	PTR int  size(1) Largest target is 2
		 -> zaaretovane_tlacitko(COMRAM[2]), 

    filtr@stav	PTR int  size(1) Largest target is 2
		 -> stav_tlacitka(COMRAM[2]), 

    filtr@vstup	PTR int  size(1) Largest target is 2
		 -> vstup(COMRAM[2]), 

    filtr@vystup	PTR int  size(1) Largest target is 2
		 -> filtrovane_tlacitko_S4(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_aretace
    _main->_filtr

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _low_isr in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1182
                                              8 COMRAM     1     1      0
                            _aretace
                              _filtr
             _preambleInitialization
 ---------------------------------------------------------------------------------
 (1) _preambleInitialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _filtr                                                5     2      3     712
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _aretace                                              5     2      3     470
                                              3 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _aretace
   _filtr
   _preambleInitialization

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0       0      44        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9      14       1       21.3%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITBIGSFRlhlhl      34      0       0      41        0.0%
BITBIGSFRll         2E      0       0      43        0.0%
BITBIGSFRhhl        19      0       0      38        0.0%
BITBIGSFRlhll       12      0       0      42        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRlhlhh       2      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      28        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec  4 19:48:50 2023

                            l66 1322                              l92 1188                              l78 103E  
                            bsr 0FE0                             l105 128C                             l901 1002  
                           l911 1064                             l903 1006                             l921 10CA  
                           l905 101E                             l931 1122                             l915 1076  
                           l907 1030                             l941 118A                             l925 10E6  
                           l917 108E                             l909 104C                             l781 131A  
                           l951 11F0                             l943 118E                             l927 10F8  
                           l919 10AE                             l935 113E                             l783 131E  
                           l953 1208                             l945 11A6                             l961 124A  
                           l929 1110                             l785 1320                             l955 1224  
                           l947 11C6                             l971 1296                             l957 123C  
                           l949 11DE                             l981 12A6                             l973 1298  
                           l991 12BE                             l983 12A8                             l975 129C  
                           l967 128E                             l993 12DC                             l985 12AA  
                           l977 12A0                             l969 1292                             l995 12EC  
                           l987 12AC                             l979 12A2                             l989 12AE  
                           u200 1208                             u201 1204                             u210 123C  
                           u130 101E                             u211 1238                             u131 101A  
                           u140 1064                             u220 12BE                             u141 1060  
                           u221 12BA                             u150 108E                             u230 12D4  
                           u151 108A                             u231 12CC                             u160 10E2  
                           u161 10DE                             u170 1110                             u171 110C  
                           u180 11A6                             u181 11A2                             u190 11DE  
                           u238 12D6                             u191 11DA                    _stav_aretace 0004  
                           wreg 0FE8                            l1005 115A                            l1007 1266  
                          i1l55 0042                            i2l49 1324                            _main 128E  
                          fsr2h 0FDA                            fsr2l 0FD9                            btemp 0015  
                          start 0052                    ___param_bank 0000                     filtr@vystup 0011  
                         ?_main 000C                   _stav_tlacitka 0006                           _T0CON 0FD5  
                         i1l883 0026                           i1l885 0034                           i1l887 003C  
                         _TMR0H 0FD7                           _TMR0L 0FD6                 __end_of_aretace 128E  
                         _filtr 1002                           _vstup 000A                 __end_of_low_isr 0052  
          _zaaretovane_tlacitko 0002                           ttemp5 0016                           ttemp6 0019  
                         ttemp7 001D                           status 0FD8                           wtemp8 0016  
               __initialization 1304                    __end_of_main 1304                          ??_main 0014  
                 __activetblptr 0003                          ?_filtr 000F                __end_of_high_isr 1328  
        _preambleInitialization 131A                          clear_0 130A                          isa$std 0001  
                     ??_aretace 0012                    __mediumconst 0000                       ??_low_isr 000C  
                    __accesstop 0060         __end_of__initialization 1310                   ___rparam_used 0001  
                __pcstackCOMRAM 000C                   __end_of_filtr 118A                         ??_filtr 0012  
              _casove_preruseni 0001                         _INTCON2 0FF1                         i1u12_20 0034  
                       i1u12_21 0030                       ?_high_isr 000C                         __Hparam 0000  
                       __Lparam 0000                    __psmallconst 1000                         __pcinit 1304  
                       __ramtop 1000                         _aretace 118A                         __ptext0 128E  
                       __ptext1 131A                         __ptext2 1002                         __ptext3 118A  
                     _T0CONbits 0FD5                         _low_isr 0018                      ??_high_isr 000C  
                __pintcode_body 1324            end_of_initialization 1310                         int_func 1324  
       ?_preambleInitialization 000C                         postdec2 0FDD                         postinc0 0FEE  
                       postinc2 0FDE                       _PORTJbits 0F88  __end_of_preambleInitialization 1324  
                    filtr@vstup 000F             start_initialization 1304                     __pbssCOMRAM 0001  
                     __pintcode 0008                     __pintcodelo 0018                        ?_aretace 000F  
                   __smallconst 1000                        ?_low_isr 000C                        _RCONbits 0FD0  
                     filtr@stav 0010                        __Hrparam 0000                        __Lrparam 0000  
                      _high_isr 0008          _filtrovane_tlacitko_S4 0008                        isa$xinst 0000  
                      int$flags 0015                   aretace@vystup 0011                     _OSCTUNEbits 0F9B  
                    _INTCONbits 0FF2                        intlevel1 0000                        intlevel2 0000  
                    _OSCCONbits 0FD3                    aretace@vstup 000F                     aretace@stav 0010  
      ??_preambleInitialization 000F  
